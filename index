<!DOCTYPE html>
<html lang="bn">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ব্যক্তিত্বের মানচিত্র: ১৬টি ধরন (বাংলা)</title>
    <!-- Load Tailwind CSS CDN for single file build -->
    <script src="https://cdn.tailwindcss.com"></script>
    
    <!-- Load critical Bengali font (Noto Sans Bengali) and Inter -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&family=Noto+Sans+Bengali:wght@100..900&display=swap" rel="stylesheet">
    
    <!-- Configure Tailwind -->
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'primary-dark': '#113E40', 
                        'primary-light': '#D6F6F6', 
                        'secondary-yellow': '#FFD700', 
                        'text-light': '#F0F9FA',
                        'role-analyst': '#1E40AF',   // Dark Blue
                        'role-diplomat': '#059669',  // Emerald Green
                        'role-sentinel': '#FBBF24',  // Amber Yellow
                        'role-explorer': '#DC2626',  // Red
                    },
                    fontFamily: {
                        sans: ['Inter', 'Noto Sans Bengali', 'sans-serif'],
                    },
                }
            }
        }
    </script>
    <style>
        /* CRITICAL CSS for immediate display and aesthetics */
        body {
            background-color: #113E40; 
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .main-card {
            background-color: #1A4D50;
            border: 1px solid #2C6E70;
            box-shadow: 0 20px 50px rgba(0, 0, 0, 0.5);
            max-width: 95%; /* Responsive width */
        }
        
        /* Optimized Transition for Perceived Speed */
        .question-content {
            opacity: 1;
            transform: translateX(0);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1); 
        }
        .animate-out {
            opacity: 0;
            transform: translateX(-20px);
        }

        /* Responsive Scale Container - Crucial for mobile responsiveness */
        .scale-container { 
            padding: 0; 
            margin-top: 2rem;
            display: flex;
            justify-content: space-between; 
            gap: 0.25rem; 
        }
        
        .scale-button {
            flex-grow: 1; 
            width: 13%; 
            height: 45px; 
            font-size: 0.9rem; 
            font-weight: 700;
            border-radius: 0.5rem; 
            background: #236569; 
            color: #D6F6F6; 
            transition: all 0.1s ease;
            box-shadow: 
                inset 0 1px 0 rgba(255, 255, 255, 0.2), 
                inset 0 -1px 0 rgba(0, 0, 0, 0.2), 
                0 4px 0 #1A4D50; 
        }
        
        .scale-button.selected {
            background: #FFD700; 
            color: #113E40; 
            transform: translateY(4px); 
            box-shadow: 
                inset 0 0 10px rgba(0, 0, 0, 0.5), 
                0 0 0 #1A4D50; 
            font-weight: 900;
        }

        @media (min-width: 768px) {
            .scale-button {
                height: 50px;
                font-size: 1.125rem;
            }
        }
        
        .result-card { 
            box-shadow: 0 0 40px rgba(255, 215, 0, 0.3); 
            opacity: 0;
            animation: fadeIn 0.5s ease-out forwards;
        }

        @keyframes fadeIn {
            to { opacity: 1; }
        }
    </style>
</head>
<body class="font-sans text-text-light p-4 relative">

    <div id="app" class="w-full max-w-4xl main-card rounded-3xl p-6 md:p-10 my-8">
        <p class="text-center text-sm text-gray-400">Loading...</p>
    </div>
    
    <script>
        // --- DATA (Hardcoded and Self-Contained) ---
        const QUESTIONS = [
            { id: 1, text: "সামাজিক অনুষ্ঠানে, আপনি সহজেই অনেক নতুন লোকের সাথে মিশতে পারেন এবং কথোপকথন শুরু করেন।", dimension: 'E', polarity: 1 },
            { id: 2, text: "কোনো সিদ্ধান্ত নেওয়ার আগে আপনি বাস্তব পরিস্থিতি এবং প্রমাণিত তথ্যের উপর নির্ভর করেন, অনুমান নয়।", dimension: 'S', polarity: 1 },
            { id: 3, text: "অন্যদের অনুভূতিতে আঘাত লাগতে পারে এমন সত্য কথা বলতে আপনি দ্বিধা করেন না।", dimension: 'T', polarity: 1 },
            { id: 4, text: "আপনার দৈনন্দিন জীবনের প্রতিটি কাজ আগে থেকে পরিকল্পনা করা এবং সময়সূচী মেনে চলাই আপনার কাছে আরামদায়ক।", dimension: 'J', polarity: 1 },
            { id: 5, text: "আপনি প্রায়শই আপনার মনকে আশেপাশে থাকা বাস্তবতার চেয়ে নতুন ধারণা এবং কল্পনার রাজ্যে হারিয়ে যেতে দেন।", dimension: 'S', polarity: -1 },
            { id: 6, text: "দীর্ঘ সময় একা কাটালে আপনার শক্তি কমে যায় এবং আপনি ক্লান্ত বোধ করেন।", dimension: 'E', polarity: 1 },
            { id: 7, text: "আপনি আবেগপ্রবণ সিদ্ধান্তের চেয়ে যুক্তিনির্ভর বিশ্লেষণকে বেশি বিশ্বাস করেন।", dimension: 'T', polarity: 1 },
            { id: 8, text: "সময়সীমা বা রুটিন না থাকলে আপনি স্বচ্ছন্দ বোধ করেন এবং শেষ মুহূর্তের পরিবর্তনকে স্বাগত জানান।", dimension: 'J', polarity: -1 },
            { id: 9, text: "আপনি প্রায়শই আপনার চারপাশে কী ঘটছে তা দ্রুত পর্যবেক্ষণ করেন এবং বিস্তারিত ছোট বিষয়গুলো খেয়াল করেন।", dimension: 'S', polarity: 1 },
            { id: 10, text: "বিতর্কের সময়, আপনি অন্যের অনুভূতি বিবেচনা করে আলোচনাকে নরম করার চেষ্টা করেন।", dimension: 'T', polarity: -1 },
            { id: 11, text: "আপনি কাজের আগে একটি বিশদ পরিকল্পনা এবং চেকলিস্ট তৈরি করতে পছন্দ করেন।", dimension: 'J', polarity: 1 },
            { id: 12, text: "আপনি নিজের অভ্যন্তরীণ চিন্তাভাবনা এবং অনুভূতির উপর বেশি মনোযোগ দেন।", dimension: 'E', polarity: -1 },
            { id: 13, text: "আপনার বন্ধু বা সহকর্মীরা প্রায়শই আপনার সাহায্য চান কারণ আপনি সহানুভূতিশীল এবং তাদের কথা মনোযোগ দিয়ে শোনেন।", dimension: 'T', polarity: -1 },
            { id: 14, text: "আপনি হঠাৎ কোনো কাজ শুরু করতে এবং পথে পরিকল্পনা পরিবর্তন করতে পছন্দ করেন।", dimension: 'J', polarity: -1 },
            { id: 15, text: "ভবিষ্যৎ নিয়ে অতিরিক্ত চিন্তা না করে আপনি বর্তমানে মনোযোগ দিতে পছন্দ করেন।", dimension: 'S', polarity: 1 },
            { id: 16, text: "আপনি দলগত কাজের চেয়ে একা কাজ করতেই বেশি স্বচ্ছন্দ।", dimension: 'E', polarity: -1 },
            { id: 17, text: "আপনি একটি বইয়ের প্রতিটি পৃষ্ঠা না পড়েও এর প্রধান ধারণাটি বুঝতে পারেন।", dimension: 'S', polarity: -1 },
            { id: 18, text: "অন্যদের সাথে একটি সংবেদনশীল সংযোগ স্থাপন করা আপনার জন্য খুব গুরুত্বপূর্ণ।", dimension: 'T', polarity: -1 },
            { id: 19, text: "আপনি প্রায়শই নিজেকে একটি গুরুত্বপূর্ণ ইভেন্টের শেষ মুহূর্তের জন্য প্রস্তুত দেখতে পান।", dimension: 'J', polarity: -1 },
            { id: 20, text: "আপনি বিশ্বাস করেন যে বিশ্বের প্রায় সবকিছুরই একটি যুক্তিযুক্ত ব্যাখ্যা রয়েছে।", dimension: 'T', polarity: 1 },
        ];
        
        const SCORE_VALUES = [-3, -2, -1, 0, 1, 2, 3];
        const SCALE_LABELS_SHORT = ["-৩", "-২", "-১", "০", "+১", "+২", "+৩"];
        const SCORE_DESCRIPTIONS = [
            { text: "সম্পূর্ণ দ্বিমত। আপনার সাথে এই বক্তব্যের কোনো মিল নেই।", color: 'text-red-400' },
            { text: "দৃঢ়ভাবে দ্বিমত। এই বক্তব্যের সাথে আপনার মিল সামান্যই।", color: 'text-red-300' },
            { text: "সামান্য দ্বিমত। আপনি কিছুটা দ্বিমত পোষণ করেন।", color: 'text-red-200' },
            { text: "নিরপেক্ষ। আপনার কোনো বিশেষ মত নেই বা উত্তরটি আপনার কাছে অপ্রাসঙ্গিক।", color: 'text-gray-400' },
            { text: "সামান্য একমত। আপনি কিছুটা একমত পোষণ করেন।", color: 'text-green-200' },
            { text: "দৃঢ়ভাবে একমত। এই বক্তব্যের সাথে আপনার যথেষ্ট মিল রয়েছে।", color: 'text-green-300' },
            { text: "সম্পূর্ণ একমত। এই বক্তব্যটি আপনার জন্য একদম সঠিক।", color: 'text-green-400' },
        ];
        
        const PERSONALITY_TYPES = {
            INTJ: { name: "স্থপতি", emoji: "🧠", type: "INTJ", role: "Analyst", description: "দূরদর্শী চিন্তাবিদ, যারা সবকিছুতেই উন্নতি আনার পরিকল্পনা করেন। জ্ঞান এবং নির্ভুলতা তাদের মূল চালিকাশক্তি।" },
            INTP: { name: "যুক্তিবিদ", emoji: "💡", type: "INTP", role: "Analyst", description: "উদ্ভাবনী, জটিল সমস্যা সমাধানে আগ্রহী এবং জ্ঞানের জন্য তৃষ্ণার্ত। সর্বদা নতুন ধারণা নিয়ে পরীক্ষা-নিরীক্ষা করেন।" },
            ENTJ: { name: "সেনাপতি", emoji: "👑", type: "ENTJ", role: "Analyst", description: "সাহসী, কল্পনাবিলাসী এবং দৃঢ় ইচ্ছাশক্তিসম্পন্ন নেতা, যারা লক্ষ্য অর্জনের পথ খুঁজে নেন।" },
            ENTP: { name: "বিতর্ককারী", emoji: "⚔️", type: "ENTP", role: "Analyst", description: "বুদ্ধিমান এবং কৌতূহলী চিন্তাবিদ যারা বুদ্ধিবৃত্তিক চ্যালেঞ্জ পছন্দ করেন।" },
            INFJ: { name: "পরামর্শদাতা", emoji: "🕊️", type: "INFJ", role: "Diplomat", description: "শান্ত প্রকৃতির এবং রহস্যময়, তবুও অনুপ্রেরণাদায়ক এবং অক্লান্ত আদর্শবাদী। তারা অন্যদের সাহায্য করতে চান।" },
            INFP: { name: "মধ্যস্থতাকারী", emoji: "🦋", type: "INFP", role: "Diplomat", description: "শান্ত এবং সংরক্ষিত, তবে দৃঢ় নৈতিকতা এবং মূল্যবোধ দ্বারা পরিচালিত। তারা গভীর অর্থ সন্ধান করেন।" },
            ENFJ: { name: "প্রয়োজক", emoji: "✨", type: "ENFJ", role: "Diplomat", description: "আকর্ষণীয়, অনুপ্রাণিতকারী নেতা যারা অন্যদের ভালো করতে চান এবং সমাজের ইতিবাচক পরিবর্তন আনেন।" },
            ENFP: { name: "প্রচারক", emoji: "🌈", type: "ENFP", role: "Diplomat", description: "উদ্যমী, সৃজনশীল, সামাজিক এবং মুক্ত মনের মানুষ। তারা জীবনকে সুযোগ হিসেবে দেখেন।" },
            ISTJ: { name: "লজিস্টিকিয়ান", emoji: "🏛️", type: "ISTJ", role: "Sentinel", description: "বাস্তববাদী এবং তথ্য-ভিত্তিক মানুষ যাদের সততা নিয়ে প্রশ্ন তোলার অবকাশ নেই। তারা কর্তব্যপরায়ণ ও নির্ভরযোগ্য।" },
            ISFJ: { name: "রক্ষক", emoji: "🛡️", type: "ISFJ", role: "Sentinel", description: "উত্সর্গীকৃত এবং উষ্ণ রক্ষাকারী, যারা তাদের প্রিয়জনদের রক্ষা করতে প্রস্তুত। তারা বিশ্বস্ত এবং সংবেদনশীল।" },
            ESTJ: { name: "কার্যনির্বাহী", emoji: "💼", type: "ESTJ", role: "Sentinel", description: "দার্শনিক, চমৎকার প্রশাসক, যারা জিনিসপত্র গুছিয়ে আনতে এবং পরিচালনা করতে পছন্দ করেন।" },
            ESFJ: { name: "পরামর্শদাতা", emoji: "🤝", type: "ESFJ", role: "Sentinel", description: "অত্যন্ত যত্নশীল, সামাজিক এবং মানুষের সাথে মিশতে আগ্রহী। তারা সমাজসেবায় সক্রিয়।" },
            ISTP: { name: "গুণী", emoji: "🛠️", type: "ISTP", role: "Explorer", description: "সাহসী, ব্যবহারিক পরীক্ষক যারা হাতে-কলমে কাজ করতে এবং ত্রুটি বিশ্লেষণ করতে পছন্দ করেন।" },
            ISFP: { name: "অভিযাত্রী", emoji: "🎨", type: "ISFP", role: "Explorer", description: "নমনীয়, মনোমুগ্ধকর শিল্পী যারা সর্বদা নতুন কিছু আবিষ্কার করতে প্রস্তুত। তারা নিজেদের মতো করে জীবন যাপন করেন।" },
            ESTP: { name: "উদ্যোগী", emoji: "🚀", type: "ESTP", role: "Explorer", description: "স্মার্ট, উদ্যমী এবং খুব উপলব্ধিপ্রবণ মানুষ যারা ঝুঁকি নিতে ভালোবাসেন এবং কর্মের মাধ্যমে শেখেন।" },
            ESFP: { name: "বিনোদনদাতা", emoji: "🎭", type: "ESFP", role: "Explorer", description: "স্বতঃস্ফূর্ত, উদ্যমী এবং প্রাণবন্ত মানুষ - যেখানেই যান, সেখানে আনন্দ নিয়ে আসেন। তারা লাইমলাইট পছন্দ করেন।" },
        };
        
        const ROLE_COLORS = {
            'Analyst': 'role-analyst',
            'Diplomat': 'role-diplomat',
            'Sentinel': 'role-sentinel',
            'Explorer': 'role-explorer',
        };

        const DIMENSION_LABELS = {
            E: 'বহির্মুখীতা (Extraversion)', I: 'অন্তর্মুখীতা (Introversion)',
            S: 'সংবেদন (Sensing)', N: 'স্বজ্ঞা (Intuition)',
            T: 'চিন্তাভাবনা (Thinking)', F: 'অনুভূতি (Feeling)',
            J: 'বিচারক (Judging)', P: 'পর্যবেক্ষণ (Prospecting)',
        };


        // --- APPLICATION STATE & CORE LOGIC ---
        let state = {
            view: 'welcome',
            currentQuestionIndex: 0,
            answers: new Array(QUESTIONS.length).fill(null),
            isQuizFinished: false,
            finalResult: null,
            dynamicScoreDescription: null,
            dynamicScoreColor: 'text-gray-400',
        };

        const appDiv = document.getElementById('app');
        let isAnimating = false;

        // --- QUIZ FLOW FUNCTIONS ---

        function goToHome() {
            state.view = 'welcome';
            state.answers.fill(null);
            state.currentQuestionIndex = 0;
            state.isQuizFinished = false;
            state.finalResult = null;
            state.dynamicScoreDescription = null;
            state.dynamicScoreColor = 'text-gray-400';
            render();
        }

        function startQuiz() {
            state.view = 'quiz';
            state.isQuizFinished = false;
            state.currentQuestionIndex = 0;
            state.answers.fill(null);
            state.dynamicScoreDescription = null;
            state.dynamicScoreColor = 'text-gray-400';
            render();
        }

        function nextQuestion() {
            if (state.answers[state.currentQuestionIndex] === null || isAnimating) return;
            const contentDiv = document.getElementById('question-content');
            if (contentDiv) {
                isAnimating = true;
                contentDiv.classList.add('animate-out');
            }
            
            setTimeout(() => {
                if (state.currentQuestionIndex < QUESTIONS.length - 1) {
                    state.currentQuestionIndex++;
                    state.dynamicScoreDescription = state.answers[state.currentQuestionIndex] !== null ? SCORE_DESCRIPTIONS[state.answers[state.currentQuestionIndex]].text : null;
                    state.dynamicScoreColor = state.answers[state.currentQuestionIndex] !== null ? SCORE_DESCRIPTIONS[state.answers[state.currentQuestionIndex]].color : 'text-gray-400';
                    render();
                } else {
                    calculateResult();
                }
                isAnimating = false;
            }, 400); 
        }

        function previousQuestion() {
            if (state.currentQuestionIndex === 0 || isAnimating) return;
            const contentDiv = document.getElementById('question-content');
            if (contentDiv) {
                isAnimating = true;
                contentDiv.style.transform = 'translateX(20px)'; 
                contentDiv.classList.add('animate-out');
            }
            
            setTimeout(() => {
                state.currentQuestionIndex--;
                state.dynamicScoreDescription = state.answers[state.currentQuestionIndex] !== null ? SCORE_DESCRIPTIONS[state.answers[state.currentQuestionIndex]].text : null;
                state.dynamicScoreColor = state.answers[state.currentQuestionIndex] !== null ? SCORE_DESCRIPTIONS[state.answers[state.currentQuestionIndex]].color : 'text-gray-400';
                render();
                isAnimating = false;
            }, 400); 
        }

        function selectAnswer(scoreIndex) {
            if (isAnimating) return; 
            
            state.answers[state.currentQuestionIndex] = scoreIndex;
            
            state.dynamicScoreDescription = SCORE_DESCRIPTIONS[scoreIndex].text;
            state.dynamicScoreColor = SCORE_DESCRIPTIONS[scoreIndex].color;
            
            render(); 
            
            if (state.currentQuestionIndex < QUESTIONS.length - 1) {
                setTimeout(() => {
                    nextQuestion();
                }, 300); 
            }
        }

        function calculateResult() {
            const scores = { E: 0, S: 0, T: 0, J: 0 };
            const maxScore = QUESTIONS.length * 3;
            QUESTIONS.forEach((q, index) => {
                const score = SCORE_VALUES[state.answers[index]] * q.polarity;
                scores[q.dimension] += score;
            });
            let resultType = "";
            let finalScores = {};
            const processDimension = (dimA, dimB, score) => {
                const polarity = (score / maxScore) * 100;
                const percentA = Math.round(50 + (polarity / 2));
                const activeType = (score >= 0) ? dimA : dimB;
                return { typeA: dimA, percentA: percentA, typeB: dimB, percentB: 100 - percentA, active: activeType };
            };

            finalScores.EI = processDimension('E', 'I', scores.E);
            finalScores.SN = processDimension('S', 'N', scores.S);
            finalScores.TF = processDimension('T', 'F', scores.T);
            finalScores.JP = processDimension('J', 'P', scores.J);
            
            resultType += finalScores.EI.active;
            resultType += finalScores.SN.active;
            resultType += finalScores.TF.active;
            resultType += finalScores.JP.active;

            state.finalResult = PERSONALITY_TYPES[resultType];
            state.finalScores = finalScores;
            state.isQuizFinished = true;
            state.view = 'result';
            render();
        }
        
        // --- EXPOSE FUNCTIONS GLOBALLY ---
        // Exposing the required functions globally for inline event handlers
        window.goToHome = goToHome;
        window.startQuiz = startQuiz;
        window.nextQuestion = nextQuestion;
        window.previousQuestion = previousQuestion;
        window.selectAnswer = selectAnswer;
        
        
        // --- RENDERING VIEWS ---
        
        function renderWelcome() {
            return `
                <div class="text-center p-8 md:p-12 flex flex-col items-center relative">
                    <h1 class="text-5xl md:text-7xl font-extrabold text-secondary-yellow mb-4 leading-tight inline-block p-2 rounded-xl">
                        Personality Map
                    </h1>
                    <p class="text-xl md:text-2xl font-medium text-primary-light mt-4 mb-12">
                        আপনার ব্যক্তিত্বের ১৬টি ধরন জানুন
                    </p>

                    <p class="text-base md:text-lg text-gray-300 mb-8 max-w-lg mx-auto">
                        এই কুইজে মোট ২০টি প্রশ্ন রয়েছে। আপনার উত্তরগুলি বিশ্লেষণ করে আপনার চার অক্ষরের ব্যক্তিত্বের প্রকারভেদ (যেমন: INTJ, ESFP) নির্ধারণ করা হবে। প্রতিটি প্রশ্নের ক্ষেত্রে আপনার সম্মতি বা দ্বিমতের মাত্রা নির্বাচন করুন।
                    </p>

                    <button
                        onclick="startQuiz()"
                        class="px-10 py-4 bg-secondary-yellow text-primary-dark font-bold text-xl rounded-full shadow-2xl hover:bg-yellow-400 transition transform hover:scale-105"
                    >
                        কুইজ শুরু করুন →
                    </button>
                    
                    <!-- Simple Footer without Firebase Count -->
                    <div class="mt-12 w-full text-sm flex justify-end items-center border-t border-gray-700 pt-4 text-gray-500">
                        <span class="text-sm text-gray-500">Developed by Biplob</span>
                    </div>
                </div>
            `;
        }
        
        function renderQuiz() {
            const q = QUESTIONS[state.currentQuestionIndex];
            if (!q) return '';

            const selectedScoreIndex = state.answers[state.currentQuestionIndex];
            const isAnswerSelected = selectedScoreIndex !== null;
            const isLastQuestion = state.currentQuestionIndex === QUESTIONS.length - 1;

            const buttonsHtml = SCALE_LABELS_SHORT.map((label, index) => {
                const isSelected = index === selectedScoreIndex;
                return `
                    <button 
                        onclick="selectAnswer(${index})" 
                        class="scale-button ${isSelected ? 'selected' : ''}" 
                        aria-label="${label}"
                    >
                        ${label}
                    </button>
                `;
            }).join('');
            
            const renderScaleKey = () => `
                <div class="scale-explanation p-3 rounded-xl mb-6 text-sm md:text-base bg-primary-dark border-2 border-secondary-yellow/50">
                    <div class="flex justify-between text-xs md:text-sm text-gray-300">
                        <div class="p-1 text-center font-bold text-red-300">
                            <span class="block text-secondary-yellow text-lg">-৩</span>
                            <span class="block">সম্পূর্ণ দ্বিমত</span>
                        </div>
                        <div class="p-1 text-center font-bold text-gray-400">
                            <span class="block text-secondary-yellow text-lg">০</span>
                            <span class="block">নিরপেক্ষ</span>
                        </div>
                        <div class="p-1 text-center font-bold text-green-300">
                            <span class="block text-secondary-yellow text-lg">+৩</span>
                            <span class="block">সম্পূর্ণ একমত</span>
                        </div>
                    </div>
                </div>
            `;
            
            const renderProgress = () => {
                const total = QUESTIONS.length;
                const current = state.currentQuestionIndex + 1;
                const answered = state.answers.filter(a => a !== null).length;
                const completedPercentage = Math.round((answered / total) * 100);
                const progress = (current / total) * 100;

                return `
                    <div class="mb-8 p-3 bg-primary-dark rounded-xl">
                        <div class="text-sm font-semibold text-secondary-yellow mb-2 flex justify-between">
                            <span>প্রশ্ন ${current} / ${total}</span>
                            <span>${completedPercentage}% সম্পন্ন</span>
                        </div>
                        <div class="w-full bg-[#2C6E70] rounded-full h-3 overflow-hidden">
                            <div class="bg-secondary-yellow h-3 rounded-full transition-all duration-500 ease-in-out" style="width: ${progress}%;"></div>
                        </div>
                    </div>
                `;
            };

            return `
                ${renderProgress()}
                
                <div id="question-content" class="question-content">
                    <h2 class="text-2xl md:text-3xl font-bold text-primary-light mb-8 leading-relaxed">
                        ${q.text}
                    </h2>
                    
                    ${renderScaleKey()}

                    <!-- Responsive Scale Container -->
                    <div class="scale-container">
                        ${buttonsHtml}
                    </div>
                    
                    <!-- Dynamic Score Description -->
                    <div class="text-center mt-6">
                        <p class="text-lg font-bold text-secondary-yellow mb-2">
                           ${isAnswerSelected ? 'আপনার নির্বাচন:' : '(একটি উত্তর নির্বাচন করুন)'}
                        </p>
                        <p id="score-description" class="text-base font-medium ${state.dynamicScoreColor}">
                            ${state.dynamicScoreDescription || ''}
                        </p>
                    </div>


                </div>

                <div class="mt-10 flex justify-between">
                    <button 
                        onclick="previousQuestion()"
                        class="px-5 py-3 bg-primary-light text-primary-dark font-semibold rounded-xl hover:bg-white transition disabled:opacity-30 disabled:cursor-not-allowed"
                        ${state.currentQuestionIndex === 0 ? 'disabled' : ''}
                    >
                        ← পূর্ববর্তী
                    </button>
                    <button 
                        onclick="nextQuestion()"
                        class="px-8 py-3 bg-secondary-yellow text-primary-dark font-bold text-lg rounded-xl shadow-lg hover:bg-yellow-400 transition disabled:opacity-50 disabled:cursor-not-allowed"
                        ${!isAnswerSelected ? 'disabled' : ''}
                    >
                        ${isLastQuestion ? 'ফলাফল দেখুন' : 'পরবর্তী →'}
                    </button>
                </div>
                
                <!-- Simple Footer without Firebase Count -->
                <div class="mt-12 text-sm text-gray-500 border-t border-gray-700 pt-4 flex justify-between items-center">
                    <button onclick="goToHome()" class="text-gray-400 hover:text-secondary-yellow transition underline p-1 text-base font-semibold">
                        ← হোম
                    </button>
                    <span>Developed by Biplob</span>
                </div>
            `;
        }
        
        function renderResult() {
            const result = state.finalResult;
            const scores = state.finalScores;
            if (!result || !scores) return '';
            
            const renderScoreBar = (dimensionData, roleColor) => {
                const isLeftActive = dimensionData.active === dimensionData.typeA;
                return `
                    <div class="mb-6">
                        <div class="flex justify-between mb-2 text-sm md:text-base font-bold">
                            <span class="${isLeftActive ? 'text-secondary-yellow' : 'text-gray-400'}">${DIMENSION_LABELS[dimensionData.typeA]}</span>
                            <span class="${!isLeftActive ? 'text-secondary-yellow' : 'text-gray-400'}">${DIMENSION_LABELS[dimensionData.typeB]}</span>
                        </div>
                        <div class="flex h-3 rounded-full overflow-hidden shadow-inner">
                            <div class="h-full transition-all duration-700 ease-in-out ${isLeftActive ? 'bg-secondary-yellow' : 'bg-gray-700'}" style="width: ${dimensionData.percentA}%;"></div>
                            <div class="h-full transition-all duration-700 ease-in-out ${!isLeftActive ? 'bg-secondary-yellow' : 'bg-gray-700'}" style="width: ${dimensionData.percentB}%;"></div>
                        </div>
                        <div class="flex justify-between mt-1 text-xs text-gray-400 font-medium">
                            <span>${dimensionData.percentA}%</span>
                            <span>${dimensionData.percentB}%</span>
                        </div>
                    </div>
                `;
            };

            const themeColorClass = ROLE_COLORS[result.role];
            const BadgeIcon = `<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-8 h-8 md:w-10 md:h-10 text-primary-dark"><path d="M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 3 3 3 3 0 0 0 3-3V5a3 3 0 0 0-3-3z"/><path d="M7.74 15.39a8 8 0 1 0 8.51 0"/></svg>`;


            return `
                <div class="text-center">
                    <h1 class="text-4xl md:text-5xl font-extrabold text-secondary-yellow mb-2">আপনার ব্যক্তিত্বের ধরন</h1>
                    <p class="text-lg md:text-xl font-medium text-gray-300 mb-8">ব্যক্তিত্বের মানচিত্রের উপর ভিত্তি করে আপনার প্রোফাইল</p>
                    
                    <div class="result-card p-6 md:p-10 rounded-2xl border-4 bg-primary-dark border-${themeColorClass} shadow-2xl">
                        
                        <!-- Personality Type Badge -->
                        <div class="inline-flex items-center justify-center p-4 md:p-6 bg-secondary-yellow rounded-full mb-6 transform rotate-[-1deg] shadow-xl">
                            <span class="text-3xl md:text-5xl font-black text-primary-dark">${result.type}</span>
                            <span class="ml-3">${BadgeIcon}</span>
                        </div>
                        
                        <h2 class="text-3xl md:text-4xl font-bold text-primary-light mb-2">
                            ${result.name} ${result.emoji}
                        </h2>
                        <p class="text-xl font-semibold text-${themeColorClass} mb-6">ভূমিকা: ${result.role === 'Analyst' ? 'বিশ্লেষক' : result.role === 'Diplomat' ? 'কূটনীতিক' : result.role === 'Sentinel' ? 'প্রহরী' : 'অনুসন্ধানকারী'}</p>
                        
                        <p class="text-base md:text-lg text-gray-300 mb-8 max-w-xl mx-auto border-t border-b border-${themeColorClass} py-4">
                            ${result.description}
                        </p>

                        <!-- Score Breakdown Section -->
                        <div class="mt-10 text-left max-w-xl mx-auto">
                            <h3 class="text-2xl font-bold mb-4 text-secondary-yellow border-b border-secondary-yellow pb-2">আপনার অক্ষীয় স্কোর</h3>
                            ${renderScoreBar(scores.EI, themeColorClass)}
                            ${renderScoreBar(scores.SN, themeColorClass)}
                            ${renderScoreBar(scores.TF, themeColorClass)}
                            ${renderScoreBar(scores.JP, themeColorClass)}
                        </div>
                        
                    </div>

                    <p class="mt-8 text-sm text-gray-500">
                        এই ফলাফলটি আপনার দেওয়া উত্তরের উপর ভিত্তি করে তৈরি। ব্যক্তিত্বের বিকাশ এবং পরিবর্তন একটি চলমান প্রক্রিয়া।
                    </p>
                    
                    <button
                        onclick="startQuiz()"
                        class="mt-6 px-8 py-4 bg-primary-light text-primary-dark font-bold text-lg rounded-xl hover:bg-white transition transform hover:scale-[1.03] shadow-lg"
                    >
                        পুনরায় পরীক্ষা দিন
                    </button>
                    
                    <!-- Simple Footer without Firebase Count -->
                    <div class="mt-4 flex justify-between items-center text-sm text-gray-500 border-t border-gray-800 pt-4">
                        <button onclick="goToHome()" class="text-gray-400 hover:text-secondary-yellow transition underline p-1 text-base font-semibold">
                            ← হোম
                        </button>
                        <span>Developed by Biplob</span>
                    </div>
                </div>
            `;
        }
        
        // Main render function
        function render() {
            if (state.view === 'welcome') {
                appDiv.innerHTML = renderWelcome();
            } else if (state.view === 'quiz') {
                appDiv.innerHTML = renderQuiz();
                setTimeout(() => {
                    const contentDiv = document.getElementById('question-content');
                    if (contentDiv) {
                        contentDiv.classList.remove('animate-out');
                        contentDiv.style.transform = 'translateX(0)'; 
                    }
                }, 50);
            } else if (state.view === 'result') {
                appDiv.innerHTML = renderResult();
            } else {
                 goToHome();
            }
        }
        
        // --- INITIALIZATION ---
        document.addEventListener('DOMContentLoaded', () => {
            goToHome(); // Start the app directly without Firebase setup
        });
    </script>
</body>
</html>
